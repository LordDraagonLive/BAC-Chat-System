
package com.bac.chatservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ChatService", targetNamespace = "http://services.bac.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ChatService {


    /**
     * 
     * @param threadTitle
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findDuplicateThreads", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.FindDuplicateThreads")
    @ResponseWrapper(localName = "findDuplicateThreadsResponse", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.FindDuplicateThreadsResponse")
    @Action(input = "http://services.bac.com/ChatService/findDuplicateThreadsRequest", output = "http://services.bac.com/ChatService/findDuplicateThreadsResponse")
    public String findDuplicateThreads(
        @WebParam(name = "ThreadTitle", targetNamespace = "")
        String threadTitle);

    /**
     * 
     * @return
     *     returns java.util.List<com.bac.chatservice.ChatThread>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "chatThreadList", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.ChatThreadList")
    @ResponseWrapper(localName = "chatThreadListResponse", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.ChatThreadListResponse")
    @Action(input = "http://services.bac.com/ChatService/chatThreadListRequest", output = "http://services.bac.com/ChatService/chatThreadListResponse")
    public List<ChatThread> chatThreadList();

    /**
     * 
     * @param threadID
     * @param creatorID
     * @param message
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createMessage", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.CreateMessage")
    @ResponseWrapper(localName = "createMessageResponse", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.CreateMessageResponse")
    @Action(input = "http://services.bac.com/ChatService/createMessageRequest", output = "http://services.bac.com/ChatService/createMessageResponse")
    public String createMessage(
        @WebParam(name = "message", targetNamespace = "")
        String message,
        @WebParam(name = "creatorID", targetNamespace = "")
        String creatorID,
        @WebParam(name = "threadID", targetNamespace = "")
        int threadID);

    /**
     * 
     * @return
     *     returns java.util.List<com.bac.chatservice.ChatMessage>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "chatsInThread", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.ChatsInThread")
    @ResponseWrapper(localName = "chatsInThreadResponse", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.ChatsInThreadResponse")
    @Action(input = "http://services.bac.com/ChatService/chatsInThreadRequest", output = "http://services.bac.com/ChatService/chatsInThreadResponse")
    public List<ChatMessage> chatsInThread();

    /**
     * 
     * @param threadID
     * @param threadTitle
     * @param creatorID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateChatThread", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.UpdateChatThread")
    @ResponseWrapper(localName = "updateChatThreadResponse", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.UpdateChatThreadResponse")
    @Action(input = "http://services.bac.com/ChatService/updateChatThreadRequest", output = "http://services.bac.com/ChatService/updateChatThreadResponse")
    public String updateChatThread(
        @WebParam(name = "threadID", targetNamespace = "")
        Integer threadID,
        @WebParam(name = "creatorID", targetNamespace = "")
        String creatorID,
        @WebParam(name = "threadTitle", targetNamespace = "")
        String threadTitle);

    /**
     * 
     * @param threadTitle
     * @param creatorId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createThread", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.CreateThread")
    @ResponseWrapper(localName = "createThreadResponse", targetNamespace = "http://services.bac.com/", className = "com.bac.chatservice.CreateThreadResponse")
    @Action(input = "http://services.bac.com/ChatService/createThreadRequest", output = "http://services.bac.com/ChatService/createThreadResponse")
    public String createThread(
        @WebParam(name = "threadTitle", targetNamespace = "")
        String threadTitle,
        @WebParam(name = "creator_Id", targetNamespace = "")
        String creatorId);

}
